plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: 'kotlin-android'

apply plugin: 'maven-publish'
group = 'com.sik.sikextension'
version = '1.0.0'

android {
    compileSdk 33
    namespace 'com.sik.extension'
    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    /**
     * 本地包以及Android相关依赖引用
     */
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    /**
     * 第三方库引用
     */
    //持久化存储相关
    api('com.tencent:mmkv-static:1.2.11')
    //自定义键盘
    api('com.github.jenly1314:kingkeyboard:1.0.4')
}

//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication){
//                from components.release
//                groupId = 'com.sik.sikextension' //your git id
//                artifactId = 'SIKExtension' //your-repository
//                version = '1.0.0' // As same as the Tag
//
//                artifact("$buildDir/outputs/aar/${artifactId}-release.aar") // here is difference, I used `from components...` before
//
//                // use this if you're using third party in your lib
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.implementation.allDependencies.each {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//            }
//        }
//    }
//}